#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18051
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Hanbo.SDMS.Model
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="AOM_SDMS")]
	public partial class SDMSDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertActionLog(ActionLog instance);
    partial void UpdateActionLog(ActionLog instance);
    partial void DeleteActionLog(ActionLog instance);
    partial void InsertCode_Function(Code_Function instance);
    partial void UpdateCode_Function(Code_Function instance);
    partial void DeleteCode_Function(Code_Function instance);
    partial void InsertUserMember(UserMember instance);
    partial void UpdateUserMember(UserMember instance);
    partial void DeleteUserMember(UserMember instance);
    partial void InsertUserAuthorizedFunction(UserAuthorizedFunction instance);
    partial void UpdateUserAuthorizedFunction(UserAuthorizedFunction instance);
    partial void DeleteUserAuthorizedFunction(UserAuthorizedFunction instance);
    partial void InsertMacroPlan(MacroPlan instance);
    partial void UpdateMacroPlan(MacroPlan instance);
    partial void DeleteMacroPlan(MacroPlan instance);
    #endregion
		
		public SDMSDataContext() : 
				base(global::Hanbo.SDMS.Model.Properties.Settings.Default.AOM_SDMSConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public SDMSDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SDMSDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SDMSDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SDMSDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<ActionLog> ActionLog
		{
			get
			{
				return this.GetTable<ActionLog>();
			}
		}
		
		public System.Data.Linq.Table<Code_Function> Code_Function
		{
			get
			{
				return this.GetTable<Code_Function>();
			}
		}
		
		public System.Data.Linq.Table<UserMember> UserMember
		{
			get
			{
				return this.GetTable<UserMember>();
			}
		}
		
		public System.Data.Linq.Table<UserAuthorizedFunction> UserAuthorizedFunction
		{
			get
			{
				return this.GetTable<UserAuthorizedFunction>();
			}
		}
		
		public System.Data.Linq.Table<MacroPlan> MacroPlan
		{
			get
			{
				return this.GetTable<MacroPlan>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ActionLog")]
	public partial class ActionLog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SN;
		
		private string _ActionType;
		
		private string _ActionData;
		
		private string _UserID;
		
		private System.DateTime _CreateOn;
		
		private string _Note;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSNChanging(int value);
    partial void OnSNChanged();
    partial void OnActionTypeChanging(string value);
    partial void OnActionTypeChanged();
    partial void OnActionDataChanging(string value);
    partial void OnActionDataChanged();
    partial void OnUserIDChanging(string value);
    partial void OnUserIDChanged();
    partial void OnCreateOnChanging(System.DateTime value);
    partial void OnCreateOnChanged();
    partial void OnNoteChanging(string value);
    partial void OnNoteChanged();
    #endregion
		
		public ActionLog()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SN", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int SN
		{
			get
			{
				return this._SN;
			}
			set
			{
				if ((this._SN != value))
				{
					this.OnSNChanging(value);
					this.SendPropertyChanging();
					this._SN = value;
					this.SendPropertyChanged("SN");
					this.OnSNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActionType", DbType="NVarChar(50)")]
		public string ActionType
		{
			get
			{
				return this._ActionType;
			}
			set
			{
				if ((this._ActionType != value))
				{
					this.OnActionTypeChanging(value);
					this.SendPropertyChanging();
					this._ActionType = value;
					this.SendPropertyChanged("ActionType");
					this.OnActionTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActionData", DbType="NVarChar(MAX)")]
		public string ActionData
		{
			get
			{
				return this._ActionData;
			}
			set
			{
				if ((this._ActionData != value))
				{
					this.OnActionDataChanging(value);
					this.SendPropertyChanging();
					this._ActionData = value;
					this.SendPropertyChanged("ActionData");
					this.OnActionDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateOn", DbType="DateTime NOT NULL")]
		public System.DateTime CreateOn
		{
			get
			{
				return this._CreateOn;
			}
			set
			{
				if ((this._CreateOn != value))
				{
					this.OnCreateOnChanging(value);
					this.SendPropertyChanging();
					this._CreateOn = value;
					this.SendPropertyChanged("CreateOn");
					this.OnCreateOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Note", DbType="NVarChar(MAX)")]
		public string Note
		{
			get
			{
				return this._Note;
			}
			set
			{
				if ((this._Note != value))
				{
					this.OnNoteChanging(value);
					this.SendPropertyChanging();
					this._Note = value;
					this.SendPropertyChanged("Note");
					this.OnNoteChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Code_Function")]
	public partial class Code_Function : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SN;
		
		private string _Code;
		
		private string _FunctionDescription;
		
		private EntitySet<UserAuthorizedFunction> _UserAuthorizedFunction;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSNChanging(int value);
    partial void OnSNChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnFunctionDescriptionChanging(string value);
    partial void OnFunctionDescriptionChanged();
    #endregion
		
		public Code_Function()
		{
			this._UserAuthorizedFunction = new EntitySet<UserAuthorizedFunction>(new Action<UserAuthorizedFunction>(this.attach_UserAuthorizedFunction), new Action<UserAuthorizedFunction>(this.detach_UserAuthorizedFunction));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SN", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int SN
		{
			get
			{
				return this._SN;
			}
			set
			{
				if ((this._SN != value))
				{
					this.OnSNChanging(value);
					this.SendPropertyChanging();
					this._SN = value;
					this.SendPropertyChanged("SN");
					this.OnSNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FunctionDescription", DbType="NVarChar(250)")]
		public string FunctionDescription
		{
			get
			{
				return this._FunctionDescription;
			}
			set
			{
				if ((this._FunctionDescription != value))
				{
					this.OnFunctionDescriptionChanging(value);
					this.SendPropertyChanging();
					this._FunctionDescription = value;
					this.SendPropertyChanged("FunctionDescription");
					this.OnFunctionDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Code_Function_UserAuthorizedFunction", Storage="_UserAuthorizedFunction", ThisKey="SN", OtherKey="FunctionSN")]
		public EntitySet<UserAuthorizedFunction> UserAuthorizedFunction
		{
			get
			{
				return this._UserAuthorizedFunction;
			}
			set
			{
				this._UserAuthorizedFunction.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_UserAuthorizedFunction(UserAuthorizedFunction entity)
		{
			this.SendPropertyChanging();
			entity.Code_Function = this;
		}
		
		private void detach_UserAuthorizedFunction(UserAuthorizedFunction entity)
		{
			this.SendPropertyChanging();
			entity.Code_Function = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserMember")]
	public partial class UserMember : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _UserID;
		
		private string _Name;
		
		private string _Email;
		
		private string _Password;
		
		private string _DeptName;
		
		private System.Nullable<System.DateTime> _CreateOn;
		
		private System.Nullable<System.DateTime> _ModifiedOn;
		
		private string _CreateBy;
		
		private string _ModifiedBy;
		
		private string _Salt;
		
		private System.Nullable<bool> _Disabled;
		
		private EntitySet<UserAuthorizedFunction> _UserAuthorizedFunction;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIDChanging(string value);
    partial void OnUserIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnDeptNameChanging(string value);
    partial void OnDeptNameChanged();
    partial void OnCreateOnChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateOnChanged();
    partial void OnModifiedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedOnChanged();
    partial void OnCreateByChanging(string value);
    partial void OnCreateByChanged();
    partial void OnModifiedByChanging(string value);
    partial void OnModifiedByChanged();
    partial void OnSaltChanging(string value);
    partial void OnSaltChanged();
    partial void OnDisabledChanging(System.Nullable<bool> value);
    partial void OnDisabledChanged();
    #endregion
		
		public UserMember()
		{
			this._UserAuthorizedFunction = new EntitySet<UserAuthorizedFunction>(new Action<UserAuthorizedFunction>(this.attach_UserAuthorizedFunction), new Action<UserAuthorizedFunction>(this.detach_UserAuthorizedFunction));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeptName", DbType="NVarChar(50)")]
		public string DeptName
		{
			get
			{
				return this._DeptName;
			}
			set
			{
				if ((this._DeptName != value))
				{
					this.OnDeptNameChanging(value);
					this.SendPropertyChanging();
					this._DeptName = value;
					this.SendPropertyChanged("DeptName");
					this.OnDeptNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateOn
		{
			get
			{
				return this._CreateOn;
			}
			set
			{
				if ((this._CreateOn != value))
				{
					this.OnCreateOnChanging(value);
					this.SendPropertyChanging();
					this._CreateOn = value;
					this.SendPropertyChanged("CreateOn");
					this.OnCreateOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedOn
		{
			get
			{
				return this._ModifiedOn;
			}
			set
			{
				if ((this._ModifiedOn != value))
				{
					this.OnModifiedOnChanging(value);
					this.SendPropertyChanging();
					this._ModifiedOn = value;
					this.SendPropertyChanged("ModifiedOn");
					this.OnModifiedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateBy", DbType="NVarChar(50)")]
		public string CreateBy
		{
			get
			{
				return this._CreateBy;
			}
			set
			{
				if ((this._CreateBy != value))
				{
					this.OnCreateByChanging(value);
					this.SendPropertyChanging();
					this._CreateBy = value;
					this.SendPropertyChanged("CreateBy");
					this.OnCreateByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="NVarChar(50)")]
		public string ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Salt", DbType="NVarChar(50)")]
		public string Salt
		{
			get
			{
				return this._Salt;
			}
			set
			{
				if ((this._Salt != value))
				{
					this.OnSaltChanging(value);
					this.SendPropertyChanging();
					this._Salt = value;
					this.SendPropertyChanged("Salt");
					this.OnSaltChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Disabled", DbType="Bit")]
		public System.Nullable<bool> Disabled
		{
			get
			{
				return this._Disabled;
			}
			set
			{
				if ((this._Disabled != value))
				{
					this.OnDisabledChanging(value);
					this.SendPropertyChanging();
					this._Disabled = value;
					this.SendPropertyChanged("Disabled");
					this.OnDisabledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserMember_UserAuthorizedFunction", Storage="_UserAuthorizedFunction", ThisKey="UserID", OtherKey="UserID")]
		public EntitySet<UserAuthorizedFunction> UserAuthorizedFunction
		{
			get
			{
				return this._UserAuthorizedFunction;
			}
			set
			{
				this._UserAuthorizedFunction.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_UserAuthorizedFunction(UserAuthorizedFunction entity)
		{
			this.SendPropertyChanging();
			entity.UserMember = this;
		}
		
		private void detach_UserAuthorizedFunction(UserAuthorizedFunction entity)
		{
			this.SendPropertyChanging();
			entity.UserMember = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserAuthorizedFunction")]
	public partial class UserAuthorizedFunction : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SN;
		
		private string _UserID;
		
		private int _FunctionSN;
		
		private bool _Authorized;
		
		private EntityRef<Code_Function> _Code_Function;
		
		private EntityRef<UserMember> _UserMember;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSNChanging(int value);
    partial void OnSNChanged();
    partial void OnUserIDChanging(string value);
    partial void OnUserIDChanged();
    partial void OnFunctionSNChanging(int value);
    partial void OnFunctionSNChanged();
    partial void OnAuthorizedChanging(bool value);
    partial void OnAuthorizedChanged();
    #endregion
		
		public UserAuthorizedFunction()
		{
			this._Code_Function = default(EntityRef<Code_Function>);
			this._UserMember = default(EntityRef<UserMember>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SN", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int SN
		{
			get
			{
				return this._SN;
			}
			set
			{
				if ((this._SN != value))
				{
					this.OnSNChanging(value);
					this.SendPropertyChanging();
					this._SN = value;
					this.SendPropertyChanged("SN");
					this.OnSNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._UserMember.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FunctionSN", DbType="Int NOT NULL")]
		public int FunctionSN
		{
			get
			{
				return this._FunctionSN;
			}
			set
			{
				if ((this._FunctionSN != value))
				{
					if (this._Code_Function.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFunctionSNChanging(value);
					this.SendPropertyChanging();
					this._FunctionSN = value;
					this.SendPropertyChanged("FunctionSN");
					this.OnFunctionSNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Authorized", DbType="Bit NOT NULL")]
		public bool Authorized
		{
			get
			{
				return this._Authorized;
			}
			set
			{
				if ((this._Authorized != value))
				{
					this.OnAuthorizedChanging(value);
					this.SendPropertyChanging();
					this._Authorized = value;
					this.SendPropertyChanged("Authorized");
					this.OnAuthorizedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Code_Function_UserAuthorizedFunction", Storage="_Code_Function", ThisKey="FunctionSN", OtherKey="SN", IsForeignKey=true)]
		public Code_Function Code_Function
		{
			get
			{
				return this._Code_Function.Entity;
			}
			set
			{
				Code_Function previousValue = this._Code_Function.Entity;
				if (((previousValue != value) 
							|| (this._Code_Function.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Code_Function.Entity = null;
						previousValue.UserAuthorizedFunction.Remove(this);
					}
					this._Code_Function.Entity = value;
					if ((value != null))
					{
						value.UserAuthorizedFunction.Add(this);
						this._FunctionSN = value.SN;
					}
					else
					{
						this._FunctionSN = default(int);
					}
					this.SendPropertyChanged("Code_Function");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserMember_UserAuthorizedFunction", Storage="_UserMember", ThisKey="UserID", OtherKey="UserID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public UserMember UserMember
		{
			get
			{
				return this._UserMember.Entity;
			}
			set
			{
				UserMember previousValue = this._UserMember.Entity;
				if (((previousValue != value) 
							|| (this._UserMember.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserMember.Entity = null;
						previousValue.UserAuthorizedFunction.Remove(this);
					}
					this._UserMember.Entity = value;
					if ((value != null))
					{
						value.UserAuthorizedFunction.Add(this);
						this._UserID = value.UserID;
					}
					else
					{
						this._UserID = default(string);
					}
					this.SendPropertyChanged("UserMember");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MacroPlan")]
	public partial class MacroPlan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SN;
		
		private string _MacroName;
		
		private string _MacroGuid;
		
		private string _Note;
		
		private string _ShapeModelFilepath;
		
		private string _TrainingImageFilepath;
		
		private System.Data.Linq.Binary _TrainingImage;
		
		private System.Data.Linq.Binary _MatchingParamBinaryData;
		
		private System.Data.Linq.Binary _MeasureBinaryData;
		
		private System.Data.Linq.Binary _MeasureAssistantBinaryData;
		
		private System.Nullable<double> _ModelRow;
		
		private System.Nullable<double> _ModelCol;
		
		private System.Nullable<double> _ModelAngle;
		
		private string _ExportUnit;
		
		private string _UpperLightValue;
		
		private string _BottomLigthValue;
		
		private System.Nullable<bool> _UpperLightSwitch;
		
		private System.Nullable<bool> _BottomLightSiwtch;
		
		private string _CreateBy;
		
		private string _ModifiedBy;
		
		private System.Nullable<System.DateTime> _CreateOn;
		
		private System.Nullable<System.DateTime> _ModifiedOn;
		
		private System.Nullable<bool> _IsDeleted;
		
		private System.Data.Linq.Binary _Snapshot;
		
		private System.Xml.Linq.XElement _TechnicalDrawingModel;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSNChanging(int value);
    partial void OnSNChanged();
    partial void OnMacroNameChanging(string value);
    partial void OnMacroNameChanged();
    partial void OnMacroGuidChanging(string value);
    partial void OnMacroGuidChanged();
    partial void OnNoteChanging(string value);
    partial void OnNoteChanged();
    partial void OnShapeModelFilepathChanging(string value);
    partial void OnShapeModelFilepathChanged();
    partial void OnTrainingImageFilepathChanging(string value);
    partial void OnTrainingImageFilepathChanged();
    partial void OnTrainingImageChanging(System.Data.Linq.Binary value);
    partial void OnTrainingImageChanged();
    partial void OnMatchingParamBinaryDataChanging(System.Data.Linq.Binary value);
    partial void OnMatchingParamBinaryDataChanged();
    partial void OnMeasureBinaryDataChanging(System.Data.Linq.Binary value);
    partial void OnMeasureBinaryDataChanged();
    partial void OnMeasureAssistantBinaryDataChanging(System.Data.Linq.Binary value);
    partial void OnMeasureAssistantBinaryDataChanged();
    partial void OnModelRowChanging(System.Nullable<double> value);
    partial void OnModelRowChanged();
    partial void OnModelColChanging(System.Nullable<double> value);
    partial void OnModelColChanged();
    partial void OnModelAngleChanging(System.Nullable<double> value);
    partial void OnModelAngleChanged();
    partial void OnExportUnitChanging(string value);
    partial void OnExportUnitChanged();
    partial void OnUpperLightValueChanging(string value);
    partial void OnUpperLightValueChanged();
    partial void OnBottomLigthValueChanging(string value);
    partial void OnBottomLigthValueChanged();
    partial void OnUpperLightSwitchChanging(System.Nullable<bool> value);
    partial void OnUpperLightSwitchChanged();
    partial void OnBottomLightSiwtchChanging(System.Nullable<bool> value);
    partial void OnBottomLightSiwtchChanged();
    partial void OnCreateByChanging(string value);
    partial void OnCreateByChanged();
    partial void OnModifiedByChanging(string value);
    partial void OnModifiedByChanged();
    partial void OnCreateOnChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateOnChanged();
    partial void OnModifiedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedOnChanged();
    partial void OnIsDeletedChanging(System.Nullable<bool> value);
    partial void OnIsDeletedChanged();
    partial void OnSnapshotChanging(System.Data.Linq.Binary value);
    partial void OnSnapshotChanged();
    partial void OnTechnicalDrawingModelChanging(System.Xml.Linq.XElement value);
    partial void OnTechnicalDrawingModelChanged();
    #endregion
		
		public MacroPlan()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SN", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int SN
		{
			get
			{
				return this._SN;
			}
			set
			{
				if ((this._SN != value))
				{
					this.OnSNChanging(value);
					this.SendPropertyChanging();
					this._SN = value;
					this.SendPropertyChanged("SN");
					this.OnSNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MacroName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string MacroName
		{
			get
			{
				return this._MacroName;
			}
			set
			{
				if ((this._MacroName != value))
				{
					this.OnMacroNameChanging(value);
					this.SendPropertyChanging();
					this._MacroName = value;
					this.SendPropertyChanged("MacroName");
					this.OnMacroNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MacroGuid", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string MacroGuid
		{
			get
			{
				return this._MacroGuid;
			}
			set
			{
				if ((this._MacroGuid != value))
				{
					this.OnMacroGuidChanging(value);
					this.SendPropertyChanging();
					this._MacroGuid = value;
					this.SendPropertyChanged("MacroGuid");
					this.OnMacroGuidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Note", DbType="NVarChar(MAX)")]
		public string Note
		{
			get
			{
				return this._Note;
			}
			set
			{
				if ((this._Note != value))
				{
					this.OnNoteChanging(value);
					this.SendPropertyChanging();
					this._Note = value;
					this.SendPropertyChanged("Note");
					this.OnNoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShapeModelFilepath", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string ShapeModelFilepath
		{
			get
			{
				return this._ShapeModelFilepath;
			}
			set
			{
				if ((this._ShapeModelFilepath != value))
				{
					this.OnShapeModelFilepathChanging(value);
					this.SendPropertyChanging();
					this._ShapeModelFilepath = value;
					this.SendPropertyChanged("ShapeModelFilepath");
					this.OnShapeModelFilepathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrainingImageFilepath", DbType="NVarChar(MAX)")]
		public string TrainingImageFilepath
		{
			get
			{
				return this._TrainingImageFilepath;
			}
			set
			{
				if ((this._TrainingImageFilepath != value))
				{
					this.OnTrainingImageFilepathChanging(value);
					this.SendPropertyChanging();
					this._TrainingImageFilepath = value;
					this.SendPropertyChanged("TrainingImageFilepath");
					this.OnTrainingImageFilepathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrainingImage", DbType="VarBinary(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary TrainingImage
		{
			get
			{
				return this._TrainingImage;
			}
			set
			{
				if ((this._TrainingImage != value))
				{
					this.OnTrainingImageChanging(value);
					this.SendPropertyChanging();
					this._TrainingImage = value;
					this.SendPropertyChanged("TrainingImage");
					this.OnTrainingImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MatchingParamBinaryData", DbType="VarBinary(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary MatchingParamBinaryData
		{
			get
			{
				return this._MatchingParamBinaryData;
			}
			set
			{
				if ((this._MatchingParamBinaryData != value))
				{
					this.OnMatchingParamBinaryDataChanging(value);
					this.SendPropertyChanging();
					this._MatchingParamBinaryData = value;
					this.SendPropertyChanged("MatchingParamBinaryData");
					this.OnMatchingParamBinaryDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MeasureBinaryData", DbType="VarBinary(MAX)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary MeasureBinaryData
		{
			get
			{
				return this._MeasureBinaryData;
			}
			set
			{
				if ((this._MeasureBinaryData != value))
				{
					this.OnMeasureBinaryDataChanging(value);
					this.SendPropertyChanging();
					this._MeasureBinaryData = value;
					this.SendPropertyChanged("MeasureBinaryData");
					this.OnMeasureBinaryDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MeasureAssistantBinaryData", DbType="VarBinary(MAX)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary MeasureAssistantBinaryData
		{
			get
			{
				return this._MeasureAssistantBinaryData;
			}
			set
			{
				if ((this._MeasureAssistantBinaryData != value))
				{
					this.OnMeasureAssistantBinaryDataChanging(value);
					this.SendPropertyChanging();
					this._MeasureAssistantBinaryData = value;
					this.SendPropertyChanged("MeasureAssistantBinaryData");
					this.OnMeasureAssistantBinaryDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModelRow", DbType="Float")]
		public System.Nullable<double> ModelRow
		{
			get
			{
				return this._ModelRow;
			}
			set
			{
				if ((this._ModelRow != value))
				{
					this.OnModelRowChanging(value);
					this.SendPropertyChanging();
					this._ModelRow = value;
					this.SendPropertyChanged("ModelRow");
					this.OnModelRowChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModelCol", DbType="Float")]
		public System.Nullable<double> ModelCol
		{
			get
			{
				return this._ModelCol;
			}
			set
			{
				if ((this._ModelCol != value))
				{
					this.OnModelColChanging(value);
					this.SendPropertyChanging();
					this._ModelCol = value;
					this.SendPropertyChanged("ModelCol");
					this.OnModelColChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModelAngle", DbType="Float")]
		public System.Nullable<double> ModelAngle
		{
			get
			{
				return this._ModelAngle;
			}
			set
			{
				if ((this._ModelAngle != value))
				{
					this.OnModelAngleChanging(value);
					this.SendPropertyChanging();
					this._ModelAngle = value;
					this.SendPropertyChanged("ModelAngle");
					this.OnModelAngleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExportUnit", DbType="NVarChar(10)")]
		public string ExportUnit
		{
			get
			{
				return this._ExportUnit;
			}
			set
			{
				if ((this._ExportUnit != value))
				{
					this.OnExportUnitChanging(value);
					this.SendPropertyChanging();
					this._ExportUnit = value;
					this.SendPropertyChanged("ExportUnit");
					this.OnExportUnitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpperLightValue", DbType="NVarChar(3)")]
		public string UpperLightValue
		{
			get
			{
				return this._UpperLightValue;
			}
			set
			{
				if ((this._UpperLightValue != value))
				{
					this.OnUpperLightValueChanging(value);
					this.SendPropertyChanging();
					this._UpperLightValue = value;
					this.SendPropertyChanged("UpperLightValue");
					this.OnUpperLightValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BottomLigthValue", DbType="NVarChar(3)")]
		public string BottomLigthValue
		{
			get
			{
				return this._BottomLigthValue;
			}
			set
			{
				if ((this._BottomLigthValue != value))
				{
					this.OnBottomLigthValueChanging(value);
					this.SendPropertyChanging();
					this._BottomLigthValue = value;
					this.SendPropertyChanged("BottomLigthValue");
					this.OnBottomLigthValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpperLightSwitch", DbType="Bit")]
		public System.Nullable<bool> UpperLightSwitch
		{
			get
			{
				return this._UpperLightSwitch;
			}
			set
			{
				if ((this._UpperLightSwitch != value))
				{
					this.OnUpperLightSwitchChanging(value);
					this.SendPropertyChanging();
					this._UpperLightSwitch = value;
					this.SendPropertyChanged("UpperLightSwitch");
					this.OnUpperLightSwitchChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BottomLightSiwtch", DbType="Bit")]
		public System.Nullable<bool> BottomLightSiwtch
		{
			get
			{
				return this._BottomLightSiwtch;
			}
			set
			{
				if ((this._BottomLightSiwtch != value))
				{
					this.OnBottomLightSiwtchChanging(value);
					this.SendPropertyChanging();
					this._BottomLightSiwtch = value;
					this.SendPropertyChanged("BottomLightSiwtch");
					this.OnBottomLightSiwtchChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateBy", DbType="NVarChar(50)")]
		public string CreateBy
		{
			get
			{
				return this._CreateBy;
			}
			set
			{
				if ((this._CreateBy != value))
				{
					this.OnCreateByChanging(value);
					this.SendPropertyChanging();
					this._CreateBy = value;
					this.SendPropertyChanged("CreateBy");
					this.OnCreateByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="NVarChar(50)")]
		public string ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateOn
		{
			get
			{
				return this._CreateOn;
			}
			set
			{
				if ((this._CreateOn != value))
				{
					this.OnCreateOnChanging(value);
					this.SendPropertyChanging();
					this._CreateOn = value;
					this.SendPropertyChanged("CreateOn");
					this.OnCreateOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedOn
		{
			get
			{
				return this._ModifiedOn;
			}
			set
			{
				if ((this._ModifiedOn != value))
				{
					this.OnModifiedOnChanging(value);
					this.SendPropertyChanging();
					this._ModifiedOn = value;
					this.SendPropertyChanged("ModifiedOn");
					this.OnModifiedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit")]
		public System.Nullable<bool> IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Snapshot", DbType="VarBinary(MAX)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Snapshot
		{
			get
			{
				return this._Snapshot;
			}
			set
			{
				if ((this._Snapshot != value))
				{
					this.OnSnapshotChanging(value);
					this.SendPropertyChanging();
					this._Snapshot = value;
					this.SendPropertyChanged("Snapshot");
					this.OnSnapshotChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TechnicalDrawingModel", DbType="Xml", UpdateCheck=UpdateCheck.Never)]
		public System.Xml.Linq.XElement TechnicalDrawingModel
		{
			get
			{
				return this._TechnicalDrawingModel;
			}
			set
			{
				if ((this._TechnicalDrawingModel != value))
				{
					this.OnTechnicalDrawingModelChanging(value);
					this.SendPropertyChanging();
					this._TechnicalDrawingModel = value;
					this.SendPropertyChanged("TechnicalDrawingModel");
					this.OnTechnicalDrawingModelChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
